<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= pageTitle %></title>
    <link rel="stylesheet" href="/css/style.css">
    <style>
        .ia-form {
            /* Utilisation de la variable CSS pour le fond */
            background-color: var(--card-bg-color);
            padding: 25px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
            transition: background-color 0.3s;
        }
        .ia-form label {
            font-weight: bold;
            display: block;
            margin-top: 15px;
        }
        .ia-form input[type="text"] {
            width: 100%;
            padding: 10px;
            margin-top: 5px;
            border: 1px solid var(--border-color); /* Utilisation de la variable */
            border-radius: 4px;
            box-sizing: border-box;
            background-color: var(--main-bg-color);
            color: var(--text-color);
        }
        .ia-form button {
            margin-top: 20px;
        }
        
        /* Styles pour l'affichage des id√©es IA */
        .ideas-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
        }
        .idea-card {
            background-color: var(--main-bg-color); /* Couleur plus claire pour la carte IA */
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            border-left: 5px solid #8e44ad; /* Couleur IA */
            transition: background-color 0.3s;
        }
        .idea-card h3 {
            color: #8e44ad;
            margin-top: 0;
        }
        .error-message {
            color: var(--delete-color); 
            font-weight: bold;
        }
        /* Style pour le bouton Mode Sombre */
        #dark-mode-toggle {
            background: none;
            border: none;
            cursor: pointer;
            font-size: 1.5em;
            color: var(--text-color);
            margin-left: 15px;
            transition: color 0.3s;
        }
        #dark-mode-toggle:hover {
            color: var(--primary-color);
        }
    </style>
</head>
<body class="light-mode">
    
    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
        <h1><%= pageTitle %></h1>
        <div style="display: flex; align-items: center;">
            <a href="/global-dashboard" class="btn btn-secondary">
                ‚Üê Retour au Tableau de Bord
            </a>
            <button id="dark-mode-toggle" aria-label="Activer le mode sombre">üåô</button>
        </div>
    </div>
    
    <hr>
    
    <section class="ia-form">
        <h2>G√©n√©rer de Nouvelles Id√©es</h2>
        <form action="/brainstorm" method="POST">
            
            <div>
                <label for="keywords">Mots-cl√©s (s√©par√©s par des virgules) :</label>
                <input type="text" id="keywords" name="keywords" 
                       value="<%= inputKeywords %>" 
                       placeholder="Ex: cuisine, vegan, recettes rapides, √©tudiants" 
                       required>
                <p style="font-size: 0.8em; color: var(--border-color);">
                    Soyez pr√©cis pour obtenir les meilleures id√©es !
                </p>
            </div>

            <div>
                <label for="category">Cat√©gorie Cible (optionnel) :</label>
                <input type="text" id="category" name="category" 
                       value="<%= inputCategory %>" 
                       placeholder="Ex: Vid√©o YouTube, Article de Blog Tech, Post Instagram">
            </div>

            <button type="submit" class="btn-primary">üß† Brainstormer avec Gemini</button>
        </form>
    </section>

    <hr>

    <section>
        <h2>R√©sultats G√©n√©r√©s</h2>

        <% if (results && results.error) { %>
            <p class="error-message"><%= results.error %></p>
        <% } else if (results && results.ideas && results.ideas.length > 0) { %>
            <div class="ideas-grid">
                <% results.ideas.forEach(idea => { %>
                    <div class="idea-card">
                        <h3><%= idea.title %></h3>
                        <p style="font-style: italic; color: #777; font-size: 0.9em;">
                            Cat√©gorie sugg√©r√©e : <%= inputCategory || 'G√©n√©ral' %>
                        </p>
                        <p><%= idea.concept %></p>
                        
                        <form action="/idea/add-from-ia" method="POST">
                            <input type="hidden" name="title" value="<%= idea.title %>">
                            <input type="hidden" name="description" value="<%= idea.concept %>">
                            <input type="hidden" name="category" value="<%= inputCategory || 'IA G√©n√©r√©e' %>">
                            <input type="hidden" name="isAIGenerated" value="true">
                            
                            <button type="submit" class="btn-primary" style="background-color: #8e44ad; margin-top: 10px;">
                                Ajouter √† Mes Id√©es
                            </button>
                        </form>
                    </div>
                <% }); %>
            </div>
        <% } else { %>
            <p style="color: var(--border-color);">
                Entrez des mots-cl√©s ci-dessus pour g√©n√©rer une liste de titres et de concepts d'id√©es.
            </p>
        <% } %>
    </section>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // --- GESTION DU MODE SOMBRE ---
        const toggle = document.getElementById('dark-mode-toggle');
        const body = document.body;
        const currentTheme = localStorage.getItem('theme');
        
        // Appliquer le th√®me sauvegard√© au chargement
        if (currentTheme) {
            body.classList.remove('light-mode', 'dark-mode');
            body.classList.add(currentTheme);
            toggle.textContent = currentTheme === 'dark-mode' ? '‚òÄÔ∏è' : 'üåô';
        } else {
            body.classList.add('light-mode');
            toggle.textContent = 'üåô';
        }

        if(toggle) {
            toggle.addEventListener('click', () => {
                const newTheme = body.classList.contains('light-mode') ? 'dark-mode' : 'light-mode';
                
                body.classList.remove('light-mode', 'dark-mode');
                body.classList.add(newTheme);
                localStorage.setItem('theme', newTheme);
                
                toggle.textContent = newTheme === 'dark-mode' ? '‚òÄÔ∏è' : 'üåô';
            });
        }
    });
</script>
</body>
</html>